@page "/foods"
@using FoodieApp.Shared.Models
@using System.Diagnostics.CodeAnalysis
@inject HttpClient Http
<PageTitle>List of foods</PageTitle>
<h3>Foods</h3>

@if (foods is null)
{
    <p><em>Loading</em></p>
}
else
{
    <div class="row g-3">
        @foreach (var food in foods)
        {
            <div class="col-12 col-sm-6 col-lg-4 col-xl-2">
                <Card @onclick="@(e => OnClicked(@food.Id))" IsShadow="true" IsCenter="true">
                    <BodyTemplate>
                        <h5>@food.Name</h5>
                        <ImageViewer Url="@food.Image"
                                     FitMode="ObjectFitMode.Cover"/>
                        <p class="card-text">@food.Description</p>
                        @for (int i = 0; i <= @food.AverageStars; i++)
                        {
                            <i class="fa-solid fa-star" style="font-size: 1em; margin: .3em; color: orange" aria-hidden="true"></i>
                        }
                    </BodyTemplate>
                </Card>
            </div>
        }
    </div>

}

@code {
    [Inject]
    [NotNull]
    private DialogService? DialogService { get; set; }

    private Food[]? foods;

    private bool IsKeyboard { get; set; }

    private async Task OnClicked(int foodId)
    {
        var food = await Http.GetFromJsonAsync<Food>($"foods/{foodId}");
        await DialogService.Show(new DialogOption()
        {
            IsKeyboard = IsKeyboard,
            Title = food.Name,
            BodyTemplate = BootstrapDynamicComponent.CreateComponent<Button>(new Dictionary<string, object?>
            {
                [nameof(Button.ChildContent)] = new RenderFragment(builder => builder.AddContent(0, "Button")),
                [nameof(Button.ChildContent)] = new RenderFragment(builder => builder.AddContent(1, "Button")),
            }).Render()
        });
    }

    private void OnClickKeyboard()
    {
        IsKeyboard = !IsKeyboard;
    }

    protected override async Task OnInitializedAsync()
    {
        foods = await Http.GetFromJsonAsync<Food[]>("foods/async");
    }

}
